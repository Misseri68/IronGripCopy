@model List<Ejercicio>
@{
    string urlServidor = Url.Content("~/images/uploads/");
}

<style>
    :root {
        --primary-color: #FC5B04;
        --accent-color: orange;
        --background-color: #2c2c2c;
        --card-background: #0c0c0d;
        --text-color: white;
        --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        --border-radius: 12px;
        --blue-color: #205c77;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: var(--background-color);
        color: var(--text-color);
        margin: 0;
        padding: 10px;
    }

    .container {
        max-width: 500px;
        margin: 0 auto;
        padding: 10px;
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .header-title {
        margin: 0;
        color: var(--primary-color);
        font-size: 18px;
        font-weight: 600;
    }

    .card {
        background-color: var(--card-background);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        padding: 14px;
        margin-bottom: 15px;
    }

    .search-container {
        display: flex;
        margin-bottom: 15px;
        gap: 8px;
    }

    .search-input {
        flex: 1;
        padding: 8px 12px;
        background-color: #333;
        color: var(--text-color);
        border: 1px solid #444;
        border-radius: var(--border-radius);
        font-size: 14px;
        outline: none;
        transition: border-color 0.3s;
    }

        .search-input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 2px rgba(252, 91, 4, 0.2);
        }

    .search-button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: var(--border-radius);
        padding: 8px 16px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .search-button:hover {
            background-color: var(--accent-color);
        }

    .ejercicio-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 10px;
    }

    .ejercicio-card {
        background-color: rgba(12, 12, 13, 0.7);
        border-radius: var(--border-radius);
        overflow: hidden;
        cursor: pointer;
        transition: transform 0.2s;
        border-left: 3px solid var(--blue-color);
        display: flex;
        align-items: center;
    }

        .ejercicio-card:hover {
            transform: translateY(-2px);
        }

        .ejercicio-card.selected {
            background-color: rgba(32, 92, 119, 0.3);
            border-left: 3px solid var(--accent-color);
        }

    .ejercicio-image {
        width: 70px;
        height: 70px;
        object-fit: cover;
        background-color: #444;
    }

    .ejercicio-info {
        padding: 10px;
        flex: 1;
    }

    .ejercicio-name {
        font-weight: 400;
        margin-bottom: 5px;
        color:orange
    }

    .ejercicio-description {
        font-size: 12px;
        color:white;
        opacity: 0.7;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .no-results {
        text-align: center;
        padding: 20px;
        opacity: 0.7;
    }

    .select-button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: 8px;
        padding: 10px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s;
        display: block;
        width: 100%;
        margin-top: 15px;
    }

        .select-button:hover {
            background-color: var(--accent-color);
        }

    .back-button {
        background-color: transparent;
        border: 1px solid #555;
        margin-bottom: 15px;
        padding: 8px 12px;
        display: flex;
        align-items: center;
        gap: 8px;
        color: var(--text-color);
        font-size: 14px;
    }

        .back-button:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
</style>

<div class="container">
    <button class="back-button" onclick="window.history.back()">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M19 12H5M12 19l-7-7 7-7" />
        </svg>
    </button>

    <div class="header">
        <h3 class="header-title">Ejercicios</h3>
    </div>

    <div class="card">
        <div class="search-container">
            <input type="text" id="searchEjercicio" class="search-input" placeholder="Buscar por nombre..." />
            <button id="searchButton" class="search-button">Buscar</button>
        </div>

        <div id="ejercicioResults" class="ejercicio-grid">
            <!-- Ejercicios will be populated here -->
        </div>

        <form id="ejercicioForm" method="post" style="display: none;">
            <input type="hidden" id="selectedEjercicioId" name="ejercicio" value="" />
            <button type="submit" class="select-button">Seleccionar Ejercicio</button>
        </form>
    </div>
</div>

<script>
    const baseImageUrl = '@urlServidor';
    const ejercicios = [
    @foreach (var ejercicio in Model)
    {
        @:{
        @:  id: @ejercicio.Id,
        @:  nombre: @Json.Serialize(ejercicio.Nombre),
        @:  descripcion: @Json.Serialize(ejercicio.Descripcion ?? ""),
        @:  foto: @Json.Serialize(ejercicio.Foto ?? "")
        @:},
    }
    ];

    // DOM elements
    const searchInput = document.getElementById('searchEjercicio');
    const searchButton = document.getElementById('searchButton');
    const resultsContainer = document.getElementById('ejercicioResults');
    const ejercicioForm = document.getElementById('ejercicioForm');
    const selectedEjercicioIdInput = document.getElementById('selectedEjercicioId');

    // Function to render results
    function renderResults(filteredEjercicios) {
        resultsContainer.innerHTML = '';

        if (filteredEjercicios.length === 0) {
            resultsContainer.innerHTML = '<div class="no-results">No se encontraron ejercicios</div>';
            ejercicioForm.style.display = 'none';
            return;
        }

        filteredEjercicios.forEach(ejercicio => {
            const cardElement = document.createElement('div');
            cardElement.className = 'ejercicio-card';
            cardElement.dataset.id = ejercicio.id;

            const imageSrc = ejercicio.foto ? ejercicio.foto : '';

            cardElement.innerHTML = `
                <img class="ejercicio-image" src="${baseImageUrl}${imageSrc}">
                <div class="ejercicio-info">
                    <div class="ejercicio-name">${ejercicio.nombre}</div>
                    ${ejercicio.descripcion ? `<div class="ejercicio-description">${ejercicio.descripcion}</div>` : ''}
                </div>
            `;

            cardElement.addEventListener('click', () => {
                // Highlight selected card
                document.querySelectorAll('.ejercicio-card').forEach(card => {
                    card.classList.remove('selected');
                });
                cardElement.classList.add('selected');

                // Set the selected ejercicio ID
                selectedEjercicioIdInput.value = ejercicio.id;

                // Show the form
                ejercicioForm.style.display = 'block';
            });

            resultsContainer.appendChild(cardElement);
        });
    }

    // Initial render of all ejercicios
    renderResults(ejercicios);

    // Search functionality
    function performSearch() {
        const searchTerm = searchInput.value.toLowerCase().trim();

        let filteredEjercicios = ejercicios;

        if (searchTerm !== '') {
            filteredEjercicios = ejercicios.filter(ejercicio =>
                ejercicio.nombre.toLowerCase().includes(searchTerm)
            );
        }

        renderResults(filteredEjercicios);
    }

    // Search on button click
    searchButton.addEventListener('click', performSearch);

    // Also allow search by pressing Enter key
    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            performSearch();
            e.preventDefault();
        }
    });

    // Focus the search input when page loads
    window.onload = function() {
        searchInput.focus();
    }
</script>